def VERSION_STRING = "undefined"
def BUILD_DIR = "undefined"

pipeline {
     agent {
                label 'pizero'
            }

    stages {
        stage('Clone Source') {
            steps {
            	deleteDir()
                checkout([
                	$class: 'GitSCM', 
                	branches: [[name: "*/${i2c_branch}"]], 
                	doGenerateSubmoduleConfigurations: false, 
                	extensions: [
                		[
                			$class: 'CloneOption', 
                			depth: 1, 
                			noTags: false, 
                			reference: '', 
                			shallow: true
            			],
            			 [
            			 	$class: 'RelativeTargetDirectory', 
            			 	relativeTargetDir: 'hd44780-i2c'
        			 	]
        			], 
        			submoduleCfg: [], 
        			userRemoteConfigs: [
        				[
        					credentialsId: 'pizero-build', 
        					url: 'https://github.com/Claudenw/hd44780-i2c.git'
    					]
					]
				])
				checkout([
                	$class: 'GitSCM', 
                	branches: [[name: "*/${pkg_branch}"]], 
                	doGenerateSubmoduleConfigurations: false, 
                	extensions: [
                		[
                			$class: 'CloneOption', 
                			depth: 1, 
                			noTags: false, 
                			reference: '', 
                			shallow: true
            			],
            			 [
            			 	$class: 'RelativeTargetDirectory', 
            			 	relativeTargetDir: 'hd44780-i2c-pkg'
        			 	]
        			], 
        			submoduleCfg: [], 
        			userRemoteConfigs: [
        				[
        					credentialsId: 'pizero-build', 
        					url: 'https://github.com/Claudenw/hd44780-i2c-pkg.git'
    					]
					]
				])
				script {
				    env.VERSION_STRING  = sh(script:'grep "VERSION" hd44780-i2c/Makefile | cut -f2 -d=', returnStdout: true).trim()
				    env.BUILD_DIR="hd44780-i2c-${env.VERSION_STRING}"
				    echo "Building ${env.VERSION_STRING } in ${env.BUILD_DIR }"
				   
				}
			}
		}
		stage( "Prepare packaging" ) {
			steps {
				dir( "hd44780-i2c-pkg" ) {
					sh '''
	                	mkdir -p ../${BUILD_DIR}/scripts/usr/src/${BUILD_DIR}
	                	mv ../hd44780-i2c/* ../${BUILD_DIR}/scripts/usr/src/${BUILD_DIR}
	                	rsync -r * ../${BUILD_DIR}
	                	echo ${VERSION_STRING} > ../${BUILD_DIR}/version.txt
	                	sed -i "1 s/^/hd44780-i2c (1.0.0-${BUILD_NUMBER}) unstable; urgency=medium\\n\\n/" ../${BUILD_DIR}/debian/changelog
	                '''
                }

            }
        }
        
        stage( "Package HD44780-i2c" ) {
            steps {
               	dir( "${env.BUILD_DIR}" ) {
	                sh '''
	                make update-debian
	                dh clean
	                dh build
	                fakeroot dh binary
	                '''
                }
	        }
        }
    }
    post {
        success {
            archiveArtifacts artifacts: 'hd44780-i2c*.deb', followSymlinks: false, onlyIfSuccessful: true    
            build job: 'Package_Index', parameters: [string(name: 'project', value: 'hd44780-i2c-pkg'), string(name: 'files', value: '*.deb')]
        }
    }
}
